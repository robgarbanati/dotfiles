alias mux=tmuxinator

alias home="~/homespace"
alias dot="~/homespace/dotfiles"

alias work="~/workspace"
alias api="~/workspace/instant-server"
alias dev="~/workspace/devbox"
alias fire="~/workspace/fireman"
alias o="~/workspace/ops"

# Start screen saver
alias ss="open /System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app"

###############################################################################
# Fabric
###############################################################################
function f() {
  (cd ~/workspace/ops/hacktools/ && ./fab.sh $@)
}
function fssh() {
  (cd ~/workspace/ops/hacktools/ && ./fssh $@)
}
PATH=$PATH:~/bin
if [ ! -d ~/bin ]; then
  echo "Creating ~/bin directory"
  mkdir ~/bin
fi
if [ ! -L ~/bin/fab ]; then
  echo "Linking fab tool"
  ln -s ~/workspace/ops/hacktools/fab.sh ~/bin/fab
fi

###############################################################################
# AWS
###############################################################################

# Instance functions
function instance_term() {
  aws ec2 stop-instances --instance-ids $@
}
function instance_term_force() {
  aws ec2 stop-instances --instance-ids $@ --force
}

# ASG functions
function asg_ssh() {
  aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names "$1-production-iad" \
    | jq ".AutoScalingGroups[0].Instances | .[].InstanceId" \
    | xargs -I % tmux split-window "tmux select-layout tiled && ssh -oStrictHostKeyChecking=no %"
}
function asg_term_decrement() {
  aws autoscaling terminate-instance-in-auto-scaling-group --instance-id $1 --should-decrement-desired-capacity
}
function asg_term_no_decrement() {
  aws autoscaling terminate-instance-in-auto-scaling-group --instance-id $1 --no-should-decrement-desired-capacity
}
function asg_ls() {
  aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names "$1-production-iad" \
    | jq ".AutoScalingGroups[0].Instances | .[].InstanceId"
}
